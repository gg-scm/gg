language: go
go_import_path: zombiezen.com/go/gg
go: "1.10.x"
install:
  - "if [[ \"$TRAVIS_OS_NAME\" = \"osx\" ]]; then brew install xz; fi"
  - "misc/build-git.bash ~/git \"$GIT_VERSION\""
  - "go get github.com/mattn/goveralls"
  - "if [[ \"$VGO\" == 1 ]]; then go get -u golang.org/x/vgo; else go get -t ./...; fi"
script:
  - "PATH=\"$HOME/git/bin-wrappers:$PATH\"; if [[ \"$VGO\" == 1 ]]; then vgo test -v -covermode=count -coverprofile=coverage.out ./...; else go test -v -covermode=count -coverprofile=coverage.out ./...; fi"
  - "goveralls -coverprofile=coverage.out -service=travis-ci"
jobs:
  include:
    - os: linux
      env: &stdenv "VGO=1 GIT_VERSION=2.16.2"
    - os: linux
      env: VGO=1 GIT_VERSION=2.7.4
    - os: linux
      env: VGO=0 GIT_VERSION=2.16.2
    - os: osx
      env: *stdenv
    - stage: release
      os: linux
      env: ""
      install: go get -u golang.org/x/vgo
      script: &releaseScript "mkdir -p dist && (cd dist && ../misc/release.bash)"
      deploy:
        provider: releases
        api_key: $GITHUB_TOKEN
        file_glob: true
        file: dist/*
        skip_cleanup: true
        on:
          tags: true
    - stage: release
      os: osx
      env: ""
      install: go get -u golang.org/x/vgo
      script: *releaseScript
      deploy:
        provider: releases
        api_key: $GITHUB_TOKEN
        file_glob: true
        file: dist/*
        skip_cleanup: true
        on:
          tags: true
stages:
  - test
  - name: release
    if: tag IS present

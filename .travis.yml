language: go
go_import_path: gg-scm.io/pkg
go: "1.11.x"
install:
  - "if [[ \"$TRAVIS_OS_NAME\" = \"osx\" ]]; then brew update && brew install xz; fi"
  - "misc/build-git.bash ~/git \"$GIT_VERSION\""
  - "go get github.com/mattn/goveralls"
  - "go mod download"
script:
  - "PATH=\"$HOME/git/bin-wrappers:$PATH\" go test -v -covermode=count -coverprofile=coverage.out -coverpkg=./... ./..."
  - "goveralls -coverprofile=coverage.out -service=travis-ci"
jobs:
  allow_failures:
    - stage: docs
      os: linux
      env: ""
  include:
    # Default
    - os: linux
      env: &stdenv "GIT_VERSION=2.20.1 GO111MODULE=on"
    # Ubuntu Bionic
    - os: linux
      env: GIT_VERSION=2.17.1 GO111MODULE=on
    # Debian Stretch
    - os: linux
      env: GIT_VERSION=2.11.0 GO111MODULE=on
    # macOS
    - os: osx
      env: *stdenv
    - stage: docs
      os: linux
      env: ""
      install: "curl -fsSL https://github.com/gohugoio/hugo/releases/download/v0.53/hugo_0.53_Linux-64bit.tar.gz | tar zxf - -C \"$HOME\" hugo"
      script: "HUGO_GOOGLEANALYTICS=UA-2285538-10 \"$HOME/hugo\" -s docs"
      deploy:
        provider: pages
        fqdn: gg-scm.io
        skip-cleanup: true
        local-dir: docs/public
        github-token: $GITHUB_TOKEN
        keep-history: true
        on:
          branch: master
    - stage: release
      os: linux
      env: ""
      install: go get -u golang.org/x/vgo
      script: &releaseScript "mkdir -p dist && (cd dist && ../misc/release.bash)"
      deploy:
        provider: releases
        api_key: $GITHUB_TOKEN
        file_glob: true
        file: dist/*
        skip_cleanup: true
        on:
          tags: true
    - stage: release
      os: osx
      env: ""
      install: go get -u golang.org/x/vgo
      script: *releaseScript
      deploy:
        provider: releases
        api_key: $GITHUB_TOKEN
        file_glob: true
        file: dist/*
        skip_cleanup: true
        on:
          tags: true
stages:
  - name: doc
    # Include pull requests, but will not run deploy.
    if: branch = master AND type = push
  - test
  - name: release
    if: tag IS present

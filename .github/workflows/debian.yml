# Copyright 2020 The gg Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Debian
on:
  push:
    branches:
    - debian
    tags:
    - debian/**
jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest
    container:
      image: debian:unstable
    steps:
    - name: Install GnuPG
      run: apt-get update && apt-get install -y --no-install-recommends gnupg
    - name: Add gg apt repository
      run: |-
        curl -fsSL https://gg-scm.io/apt-key.gpg | apt-key --keyring /etc/apt/trusted.gpg.d/gg.gpg add -
        echo "deb [signed-by=/etc/apt/trusted.gpg.d/gg.gpg] https://apt.gg-scm.io gg main" | tee /etc/apt/sources.list.d/gg.list
        echo "deb-src [signed-by=/etc/apt/trusted.gpg.d/gg.gpg] https://apt.gg-scm.io gg main" | tee -a /etc/apt/sources.list.d/gg.list
    - name: Install dev tools
      run: apt-get update && apt-get install -y --no-install-recommends devscripts equivs git-buildpackage
    - name: Check out code
      uses: actions/checkout@v2
      with:
        # Check out everything, since we need upstream tags.
        fetch-depth: 0
    - name: Install build dependencies
      run: mk-build-deps --install --remove --tool="apt-get -y --no-install-recommends" && rm -f *.buildinfo *.changes
    - name: Build package
      run: gbp buildpackage --git-export-dir=build --no-sign --git-ignore-branch
    - uses: actions/upload-artifact@v2
      with:
        name: deb
        path: |
          build/*.deb
          build/*.dsc
          build/*.tar.xz
          build/*.tar.gz
  upload:
    name: Upload Package
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/debian/')
    steps:
    - name: Download GCP credentials
      run: echo "$GOOGLE_KEY_JSON" > ~/gcp.json
      env:
        GOOGLE_KEY_JSON: ${{secrets.GOOGLE_KEY_JSON}}
    - name: Install GnuPG
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends gnupg
    - name: Import signing key
      run: echo "$APT_SIGNING_KEY" | gpg --import --batch --no-tty
      env:
        APT_SIGNING_KEY: ${{secrets.APT_SIGNING_KEY}}
    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
    - name: Copy artifacts from build
      uses: actions/download-artifact@v2
      with:
        name: deb
    - name: Install aptblob
      run: GOPATH="$HOME" go get zombiezen.com/go/aptblob
      env:
        GO111MODULE: on
    - name: Run aptblob
      run: GOOGLE_APPLICATION_CREDENTIALS="$HOME/gcp.json" ~/bin/aptblob upload -k EB23676A7D0F99534E1FE43FE4C2729A30CA32C4 gs://gg-scm-apt gg *.deb *.dsc

